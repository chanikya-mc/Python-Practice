The game mode is REVERSE: You do not have access to the statement. You have to guess what to do by observing the following set of tests:
01 Test 1
Input
Expected output
2
Hello
Hello
Hello
02 Test 2
Input
Expected output
7
blah
blah
blah
blah
blah
blah
blah
blah
03 Test 3
Input
Expected output
99
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
<(^.^)>
04 Test 4
Input
Expected output
3
\n
\n
\n
\n


coding:
import sys
import math

# Auto-generated code below aims at helping you parse
# the standard input according to the problem statement.

n = int(input())
w = input()
for i in range(n):
    print(w)


